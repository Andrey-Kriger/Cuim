

HI-TECH Software 8051 Macro Assembler V9.60                                Page 1
                                                       Mon Apr 07 18:36:06 2025

     1                           	psect	idata,class=DATA,space=1,limit=080h
     2                           	psect	irdata,class=DATA,limit=080h
     3                           	global	_msec
     4                           	signat	_msec,4216
     5                           	global	stack_internal
     6                           	psect	text,class=CODE
     7                           	psect	text
     8                           	file	"C:\Users\A4F7~1\DOCUME~1\NATION~1\CIRCUI~
                                 1.0\MCUWOR~1\PRAT4~1\PRACT4~1\main.c"
     9                           	line	3
    10  00003                     _msec:
    11  00003  80 33              	j	f1411
    12  00005                     f1410:
    13                           ;main.c: 2: void msec (int x)
    14                           
    15                           ;main.c: 3: {
    16                           
    17                           ;main.c: 4: while(x-->0)
    18                           
    19                           ;	var   _x assigned to ?a_msec+0
    20                           ;_x stored from WR2
    21  00005  8C 2D              	mov	?a_msec+0,r4
    22  00007  8D 2E              	mov	?a_msec+0+1,r5
    23                           	line	4
    24  00009  80 13              	jmp	l3
    25  0000B                     l4:
    26                           ;main.c: 5: {
    27                           
    28                           ;main.c: 6: TH0 = (-10000)>>8;
    29                           
    30                           	line	6
    31  0000B  75 8C D8           	mov	08Ch,#216
    32                           ;main.c: 7: TL0=-10000;
    33                           
    34                           	line	7
    35  0000E  75 8A F0           	mov	08Ah,#240
    36                           ;main.c: 8: TR0=1;
    37                           
    38                           	line	8
    39  00011  D2 8C              	setb	tcon.4
    40                           ;main.c: 9: do;
    41                           
    42                           	line	9
    43  00013                     l8:
    44                           ;main.c: 10: while(TF0==0);
    45                           
    46                           	line	10
    47  00013  30 8D 02           	bnb	tcon.5, u11
    48  00016  80 02              	jmp	u10
    49  00018                     u11:
    50  00018  80 F9              	jmp	l8
    51  0001A                     u10:
    52  0001A                     l7:
    53                           ;main.c: 11: TF0=0;
    54                           
    55                           	line	11
    56  0001A  C2 8D              	clr	tcon.5
    57                           ;main.c: 12: TR0=0;
    58                           
    59                           	line	12
    60  0001C  C2 8C              	clr	tcon.4
    61                           	line	13
    62  0001E                     l3:
    63                           	line	4
    64  0001E  AC 2D              	mov	r4,?a_msec+0
    65  00020  E5 2E              	mov	a,?a_msec+0+1
    66  00022  FD                 	mov	r5,a
    67  00023  15 2E              	dec	?a_msec+0+1
    68  00025  70 02              	jnz	u24
    69  00027  15 2D              	dec	?a_msec+0
    70  00029                     u24:
    71  00029  ED                 	mov	a,r5
    72  0002A  24 FF              	add	a,#low -(1)
    73  0002C  EC                 	mov	a,r4
    74  0002D  64 80              	xrl	a,#80h
    75  0002F  34 7F              	addc	a,#(high -(1))xor 80h
    76  00031  40 02              	bc	u31
    77  00033  80 02              	jmp	u30
    78  00035                     u31:
    79  00035  80 D4              	jmp	l4
    80  00037                     u30:
    81  00037                     l5:
    82                           ;main.c: 13: }
    83                           
    84                           ;main.c: 14: }
    85                           
    86                           	line	14
    87  00037                     l2:
    88  00037  22                 	ret
    89  00038                     f1411:
    90  00038  80 CB              	j	f1410
    91                           	FNSIZE	_msec,2,0
    92                           	global	?a_msec
    93  0000                     f1412	equ	0
    94                           	global	_main
    95                           	signat	_main,88
    96                           	line	16
    97  0003A                     _main:
    98  0003A  02 012A            	j	f1421
    99  0003D                     f1420:
   100                           ;main.c: 15: void main()
   101                           
   102                           ;main.c: 16: {
   103                           
   104                           ;	var   _i assigned to ?a_main+0
   105                           ;	var   _k assigned to ?a_main+2
   106                           ;	var   _array assigned to ?a_main+4
   107                           ;main.c: 17: int i;
   108                           
   109                           ;main.c: 18: int k;
   110                           
   111                           ;main.c: 19: unsigned char array[9];
   112                           
   113                           ;main.c: 20: TMOD=0x1;
   114                           
   115                           	line	20
   116  0003D  75 89 01           	mov	089h,#1
   117                           ;main.c: 21: array[0]=0x0;
   118                           
   119                           	line	21
   120  00040  75 24  00          	mov	?a_main+4,#0
   121                           ;main.c: 22: array[1]=0x1;
   122                           
   123                           	line	22
   124  00043  75 25  01          	mov	0+?a_main+4+01h,#1
   125                           ;main.c: 23: array[2]=0x2;
   126                           
   127                           	line	23
   128  00046  75 26  02          	mov	0+?a_main+4+02h,#2
   129                           ;main.c: 24: array[3]=0x4;
   130                           
   131                           	line	24
   132  00049  75 27  04          	mov	0+?a_main+4+03h,#4
   133                           ;main.c: 25: array[4]=0x8;
   134                           
   135                           	line	25
   136  0004C  75 28  08          	mov	0+?a_main+4+04h,#8
   137                           ;main.c: 26: array[5]=0x10;
   138                           
   139                           	line	26
   140  0004F  75 29  10          	mov	0+?a_main+4+05h,#16
   141                           ;main.c: 27: array[6]=0x20;
   142                           
   143                           	line	27
   144  00052  75 2A  20          	mov	0+?a_main+4+06h,#32
   145                           ;main.c: 28: array[7]=0x40;
   146                           
   147                           	line	28
   148  00055  75 2B  40          	mov	0+?a_main+4+07h,#64
   149                           ;main.c: 29: array[8]=0x80;
   150                           
   151                           	line	29
   152  00058  75 2C  80          	mov	0+?a_main+4+08h,#128
   153                           ;main.c: 30: P1=array[0];
   154                           
   155                           	line	30
   156  0005B  85 24  90          	mov	090h,?a_main+4
   157                           ;main.c: 31: msec(2);
   158                           
   159                           	FNCALL	_main,_msec
   160                           	line	31
   161  0005E  7C 00              	mov	r4,#high (2)
   162  00060  7D 02              	mov	r5,#low (2)
   163  00062  12 0003            	lcall	_msec
   164                           
   165                           ;main.c: 32: for(i=1;i<1800;i++)
   166                           
   167                           	line	32
   168  00065  75 20  00          	mov	?a_main+0,#high(1)
   169  00068  75 21  01          	mov	?a_main+0+1,#low(1)
   170  0006B  E5 21              	mov	a,?a_main+0+1
   171  0006D  24 F8              	add	a,#low -(1800)
   172  0006F  E5 20              	mov	a,?a_main+0
   173  00071  64 80              	xrl	a,#80h
   174  00073  34 78              	addc	a,#(high -(1800))xor 80h
   175  00075  50 02              	bnc	u41
   176  00077  80 02              	jmp	u40
   177  00079                     u41:
   178  00079  80 03              	jmp	l10
   179  0007B                     u40:
   180  0007B  02 0127            	jmp	l11
   181                           	line	33
   182  0007E                     l10:
   183                           ;main.c: 33: {
   184                           
   185                           ;main.c: 34: if (i == 100){
   186                           
   187                           	line	34
   188  0007E  E5 21              	mov	a,?a_main+0+1
   189  00080  B4 64 07           	cbne	a,#low (100),u51
   190  00083  E5 20              	mov	a,?a_main+0
   191  00085  B4 00 02           	cbne	a,#high (100),u51
   192  00088  80 02              	jmp	u50
   193  0008A                     u51:
   194  0008A  80 0D              	jmp	l13
   195  0008C                     u50:
   196                           ;main.c: 35: P1=array[3];
   197                           
   198                           	line	35
   199  0008C  79 27              	mov	r1,#?a_main+4+03h
   200  0008E  87 90              	mov	090h,@r1
   201                           ;main.c: 36: msec(100);
   202                           
   203                           	line	36
   204  00090  7C 00              	mov	r4,#high (100)
   205  00092  7D 64              	mov	r5,#low (100)
   206  00094  12 0003            	lcall	_msec
   207                           
   208                           ;main.c: 37: }
   209                           
   210                           	line	37
   211  00097  80 75              	jmp	l14
   212                           	line	38
   213  00099                     l13:
   214                           ;main.c: 38: else if (i == 200) {
   215                           
   216  00099  E5 21              	mov	a,?a_main+0+1
   217  0009B  B4 C8 07           	cbne	a,#low (200),u61
   218  0009E  E5 20              	mov	a,?a_main+0
   219  000A0  B4 00 02           	cbne	a,#high (200),u61
   220  000A3  80 02              	jmp	u60
   221  000A5                     u61:
   222  000A5  80 0D              	jmp	l15
   223  000A7                     u60:
   224                           ;main.c: 39: P1=array[6];
   225                           
   226                           	line	39
   227  000A7  79 2A              	mov	r1,#?a_main+4+06h
   228  000A9  87 90              	mov	090h,@r1
   229                           ;main.c: 40: msec(100);
   230                           
   231                           	line	40
   232  000AB  7C 00              	mov	r4,#high (100)
   233  000AD  7D 64              	mov	r5,#low (100)
   234  000AF  12 0003            	lcall	_msec
   235                           
   236                           ;main.c: 41: }
   237                           
   238                           	line	41
   239  000B2  80 5A              	jmp	l16
   240                           	line	42
   241  000B4                     l15:
   242                           ;main.c: 42: else if (i == 300) {
   243                           
   244  000B4  E5 21              	mov	a,?a_main+0+1
   245  000B6  B4 2C 07           	cbne	a,#low (300),u71
   246  000B9  E5 20              	mov	a,?a_main+0
   247  000BB  B4 01 02           	cbne	a,#high (300),u71
   248  000BE  80 02              	jmp	u70
   249  000C0                     u71:
   250  000C0  80 0F              	jmp	l17
   251  000C2                     u70:
   252                           ;main.c: 43: P1=array[4] + array[5];
   253                           
   254                           	line	43
   255  000C2  E5 28              	mov	a,0+?a_main+4+04h
   256  000C4  25 29              	add	a,0+?a_main+4+05h
   257  000C6  F5 90              	mov	090h,a
   258                           ;main.c: 44: msec(300);
   259                           
   260                           	line	44
   261  000C8  7C 01              	mov	r4,#high (300)
   262  000CA  7D 2C              	mov	r5,#low (300)
   263  000CC  12 0003            	lcall	_msec
   264                           
   265                           ;main.c: 45: }
   266                           
   267                           	line	45
   268  000CF  80 3D              	jmp	l18
   269                           	line	46
   270  000D1                     l17:
   271                           ;main.c: 46: else if (i == 600) {
   272                           
   273  000D1  E5 21              	mov	a,?a_main+0+1
   274  000D3  B4 58 07           	cbne	a,#low (600),u81
   275  000D6  E5 20              	mov	a,?a_main+0
   276  000D8  B4 02 02           	cbne	a,#high (600),u81
   277  000DB  80 02              	jmp	u80
   278  000DD                     u81:
   279  000DD  80 0F              	jmp	l19
   280  000DF                     u80:
   281                           ;main.c: 47: P1=array[2] + array[7];
   282                           
   283                           	line	47
   284  000DF  E5 26              	mov	a,0+?a_main+4+02h
   285  000E1  25 2B              	add	a,0+?a_main+4+07h
   286+ 000E3  F5 90              	mov	090h,a
   287+                          ;main.c: 48: msec(500);
   288+                          
   289+                          	line	48
   290+ 000E5  7C 01              	mov	r4,#high (500)
   291  000E7  7D F4              	mov	r5,#low (500)
   292  000E9  12 0003            	lcall	_msec
   293                           
   294                           ;main.c: 49: }
   295                           
   296                           	line	49
   297  000EC  80 20              	jmp	l20
   298                           	line	50
   299  000EE                     l19:
   300                           ;main.c: 50: else if (i == 1000) {
   301                           
   302  000EE  E5 21              	mov	a,?a_main+0+1
   303  000F0  B4 E8 07           	cbne	a,#low (1000),u91
   304  000F3  E5 20              	mov	a,?a_main+0
   305  000F5  B4 03 02           	cbne	a,#high (1000),u91
   306  000F8  80 02              	jmp	u90
   307  000FA                     u91:
   308  000FA  80 0F              	jmp	l21
   309  000FC                     u90:
   310                           ;main.c: 51: P1=array[1] + array[8];
   311                           
   312                           	line	51
   313  000FC  E5 25              	mov	a,0+?a_main+4+01h
   314  000FE  25 2C              	add	a,0+?a_main+4+08h
   315  00100  F5 90              	mov	090h,a
   316                           ;main.c: 52: msec(700);
   317                           
   318                           	line	52
   319  00102  7C 02              	mov	r4,#high (700)
   320  00104  7D BC              	mov	r5,#low (700)
   321  00106  12 0003            	lcall	_msec
   322                           
   323                           ;main.c: 53: }
   324                           
   325                           	line	53
   326  00109  80 03              	jmp	l22
   327                           	line	54
   328  0010B                     l21:
   329                           ;main.c: 54: else{
   330                           
   331                           ;main.c: 55: P1=array[0];
   332                           
   333                           	line	55
   334  0010B  85 24  90          	mov	090h,?a_main+4
   335                           	line	56
   336  0010E                     l22:
   337  0010E                     l20:
   338  0010E                     l18:
   339  0010E                     l16:
   340  0010E                     l14:
   341                           	line	32
   342  0010E  05 21              	inc	?a_main+0+1
   343  00110  E5 21              	mov	a,?a_main+0+1
   344  00112  70 02              	jnz	u100
   345  00114  05 20              	inc	?a_main+0
   346  00116                     u100:
   347  00116  E5 21              	mov	a,?a_main+0+1
   348  00118  24 F8              	add	a,#low -(1800)
   349  0011A  E5 20              	mov	a,?a_main+0
   350  0011C  64 80              	xrl	a,#80h
   351  0011E  34 78              	addc	a,#(high -(1800))xor 80h
   352  00120  50 02              	bnc	u111
   353  00122  80 03              	jmp	u110
   354  00124                     u111:
   355  00124  02 007E            	jmp	l10
   356  00127                     u110:
   357  00127                     l11:
   358                           ;main.c: 56: }
   359                           
   360                           ;main.c: 57: }
   361                           
   362                           ;main.c: 58: while(1);
   363                           
   364                           	line	58
   365  00127                     l24:
   366  00127                     l23:
   367  00127  80 FE              	jmp	l24
   368  00129                     l25:
   369                           ;main.c: 59: }
   370                           
   371                           	line	59
   372  00129                     l9:
   373  00129  22                 	ret
   374  0012A                     f1421:
   375  0012A  02 003D            	j	f1420
   376                           	FNSIZE	_main,13,0
   377                           	global	?a_main
   378  0000                     f1422	equ	0
   379  0000                     _A10	equ	162
   380  0000                     _A11	equ	163
   381  0000                     _A12	equ	164
   382  0000                     _A13	equ	165
   383  0000                     _A14	equ	166
   384  0000                     _A15	equ	167
   385  0000                     _A8	equ	160
   386  0000                     _A9	equ	161
   387  0000                     _AC	equ	214
   388  0000                     _ACC0	equ	224
   389  0000                     _ACC1	equ	225
   390  0000                     _ACC2	equ	226
   391  0000                     _ACC3	equ	227
   392  0000                     _ACC4	equ	228
   393  0000                     _ACC5	equ	229
   394  0000                     _ACC6	equ	230
   395  0000                     _ACC7	equ	231
   396  0000                     _AD0	equ	128
   397  0000                     _AD1	equ	129
   398  0000                     _AD2	equ	130
   399  0000                     _AD3	equ	131
   400  0000                     _AD4	equ	132
   401  0000                     _AD5	equ	133
   402  0000                     _AD6	equ	134
   403  0000                     _AD7	equ	135
   404  0000                     _B0	equ	240
   405  0000                     _B1	equ	241
   406  0000                     _B2	equ	242
   407  0000                     _B3	equ	243
   408  0000                     _B4	equ	244
   409  0000                     _B5	equ	245
   410  0000                     _B6	equ	246
   411  0000                     _B7	equ	247
   412  0000                     _CY	equ	215
   413  0000                     _EA	equ	175
   414  0000                     _ES	equ	172
   415  0000                     _ET0	equ	169
   416  0000                     _ET1	equ	171
   417  0000                     _EX0	equ	168
   418  0000                     _EX1	equ	170
   419  0000                     _F0	equ	213
   420  0000                     _IE0	equ	137
   421  0000                     _IE1	equ	139
   422  0000                     _INT0	equ	178
   423  0000                     _INT1	equ	179
   424  0000                     _IT0	equ	136
   425  0000                     _IT1	equ	138
   426  0000                     _OV	equ	210
   427  0000                     _P	equ	208
   428  0000                     _P00	equ	128
   429  0000                     _P01	equ	129
   430  0000                     _P02	equ	130
   431  0000                     _P03	equ	131
   432  0000                     _P04	equ	132
   433  0000                     _P05	equ	133
   434  0000                     _P06	equ	134
   435  0000                     _P07	equ	135
   436  0000                     _P10	equ	144
   437  0000                     _P11	equ	145
   438  0000                     _P12	equ	146
   439  0000                     _P13	equ	147
   440  0000                     _P14	equ	148
   441  0000                     _P15	equ	149
   442  0000                     _P16	equ	150
   443  0000                     _P17	equ	151
   444  0000                     _P20	equ	160
   445  0000                     _P21	equ	161
   446  0000                     _P22	equ	162
   447  0000                     _P23	equ	163
   448  0000                     _P24	equ	164
   449  0000                     _P25	equ	165
   450  0000                     _P26	equ	166
   451  0000                     _P27	equ	167
   452  0000                     _P30	equ	176
   453  0000                     _P31	equ	177
   454  0000                     _P32	equ	178
   455  0000                     _P33	equ	179
   456  0000                     _P34	equ	180
   457  0000                     _P35	equ	181
   458  0000                     _P36	equ	182
   459  0000                     _P37	equ	183
   460  0000                     _PS	equ	188
   461  0000                     _PT0	equ	185
   462  0000                     _PT1	equ	187
   463  0000                     _PX0	equ	184
   464  0000                     _PX1	equ	186
   465  0000                     _RB8	equ	154
   466  0000                     _RD	equ	183
   467  0000                     _REN	equ	156
   468  0000                     _RI	equ	152
   469  0000                     _RS0	equ	211
   470  0000                     _RS1	equ	212
   471  0000                     _RXD	equ	176
   472  0000                     _SM0	equ	159
   473  0000                     _SM1	equ	158
   474  0000                     _SM2	equ	157
   475  0000                     _T0	equ	180
   476  0000                     _T1	equ	181
   477  0000                     _TB8	equ	155
   478  0000                     _TF0	equ	141
   479  0000                     _TF1	equ	143
   480  0000                     _TI	equ	153
   481  0000                     _TR0	equ	140
   482  0000                     _TR1	equ	142
   483  0000                     _TXD	equ	177
   484  0000                     _WR	equ	182
   485  0000                     _ACC	equ	224
   486  0000                     _B	equ	240
   487  0000                     _DPH	equ	131
   488  0000                     _DPL	equ	130
   489  0000                     _IE	equ	168
   490  0000                     _IP	equ	184
   491  0000                     _P0	equ	128
   492  0000                     _P1	equ	144
   493  0000                     _P2	equ	160
   494  0000                     _P3	equ	176
   495  0000                     _PCON	equ	135
   496  0000                     _PSW	equ	208
   497  0000                     _SBUF	equ	153
   498  0000                     _SCON	equ	152
   499  0000                     _SP	equ	129
   500  0000                     _TCON	equ	136
   501  0000                     _TH0	equ	140
   502  0000                     _TH1	equ	141
   503  0000                     _TL0	equ	138
   504  0000                     _TL1	equ	139
   505  0000                     _TMOD	equ	137
   506  0000                     _ACC_BITS	equ	224
   507  0000                     _B_BITS	equ	240
   508  0000                     _IE_BITS	equ	168
   509  0000                     _IP_BITS	equ	184
   510  0000                     _P0_BITS	equ	128
   511  0000                     _P1_BITS	equ	144
   512  0000                     _P2_BITS	equ	160
   513  0000                     _P3_BITS	equ	176
   514  0000                     _PCON_BITS	equ	135
   515  0000                     _PSW_BITS	equ	208
   516  0000                     _SCON_BITS	equ	152
   517  0000                     _TCON_BITS	equ	136
   518  0000                     _TMOD_BITS	equ	137


HI-TECH Software 8051 Macro Assembler V9.60                                Page 2
Symbol Table                                           Mon Apr 07 18:36:06 2025

       ?a_main 00020              _B 000F0              l2 00037  
            l3 0001E              l4 0000B              l5 00037  
            _P 000D0              l7 0001A              l8 00013  
            l9 00129         ?a_msec 0002D             _B0 000F0  
           _B1 000F1             _B2 000F2             _B3 000F3  
           _B4 000F4             _B5 000F5             _B6 000F6  
           _A8 000A0             _B7 000F7             _A9 000A1  
           _F0 000D5             _AC 000D6             l10 0007E  
           l11 00127             l20 0010E             l21 0010B  
           l13 00099             l22 0010E             l14 0010E  
           _EA 000AF             l23 00127             l15 000B4  
           l24 00127             l16 0010E             l25 00129  
           l17 000D1             l18 0010E             l19 000EE  
           _P0 00080             _P1 00090             _P2 000A0  
           _P3 000B0             _IE 000A8             _T0 000B4  
           _T1 000B5             _ES 000AC             _CY 000D7  
           _IP 000B8             _RD 000B7             u10 0001A  
           u11 00018             _RI 00098             u30 00037  
           u31 00035             u40 0007B             u24 00029  
           _TI 00099             u41 00079             u50 0008C  
           _PS 000BC             u51 0008A             _OV 000D2  
           u60 000A7             u61 000A5             _SP 00081  
           u70 000C2             u71 000C0             u80 000DF  
           u81 000DD             u90 000FC             u91 000FA  
           _WR 000B6         _B_BITS 000F0            _A10 000A2  
          _A11 000A3            _A12 000A4            _A13 000A5  
          _A14 000A6            _A15 000A7            _AD0 00080  
          _AD1 00081            _AD2 00082            _AD3 00083  
          _AD4 00084            _AD5 00085            _AD6 00086  
          _AD7 00087            _ACC 000E0            _P00 00080  
          _P01 00081            _P10 00090            _P02 00082  
          _P11 00091            _P03 00083            _P20 000A0  
          _P12 00092            _P04 00084            _P21 000A1  
          _P13 00093            _P05 00085            _P30 000B0  
          _P22 000A2            _P14 00094            _P06 00086  
          _P31 000B1            _P23 000A3            _P15 00095  
          _P07 00087            _P32 000B2            _P24 000A4  
          _P16 00096            _P33 000B3            _P25 000A5  
          _P17 00097            _P34 000B4            _P26 000A6  
          _P35 000B5            _P27 000A7            _P36 000B6  
          _P37 000B7            _IE0 00089            _IE1 0008B  
          _ET0 000A9            _ET1 000AB            _EX0 000A8  
          _EX1 000AA            _DPH 00083            _DPL 00082  
          _IT0 00088            _IT1 0008A            _RB8 0009A  
          u100 00116            u110 00127            u111 00124  
          _TF0 0008D            _TB8 0009B            _TF1 0008F  
          _TH0 0008C            _TH1 0008D            _SM0 0009F  
          _SM1 0009E            _TL0 0008A            _SM2 0009D  
          _PT0 000B9            _TL1 0008B            _PT1 000BB  
          _RS0 000D3            _RS1 000D4            _REN 0009C  
          _PX0 000B8            _PX1 000BA            _TR0 0008C  
          _TR1 0008E            _RXD 000B0            _PSW 000D0  
          _TXD 000B1        _P0_BITS 00080        _P1_BITS 00090  
      _P2_BITS 000A0        _P3_BITS 000B0        _IE_BITS 000A8  
     _ACC_BITS 000E0        _IP_BITS 000B8           f1410 00005  
         f1411 00038           f1420 0003D           f1412 00000  
         f1421 0012A           f1422 00000           _ACC0 000E0  
         _ACC1 000E1           _ACC2 000E2           _ACC3 000E3  
         _ACC4 000E4           _ACC5 000E5           _ACC6 000E6  
         _ACC7 000E7  stack_internal 00001           _INT0 000B2  
         _INT1 000B3           _PCON 00087           _SCON 00098  
         _SBUF 00099           _TCON 00088           _TMOD 00089  
         _main 0003A           _msec 00003       _PSW_BITS 000D0  
    _PCON_BITS 00087      _SCON_BITS 00098      _TCON_BITS 00088  
    _TMOD_BITS 00089  
